import torch
from torch import nn
from ...model import Simple
from torch.optim import Adam
from ...data_loader import (
    Data2Vec,
    Mfcc,
    MfccWithDeltas,
    ModifiedCPC,
    UnispeechSAT,
    Wav2Vec,
    LoaderTypes,
)
from ...trainer import HParams
from ..device import device

## class weights are derived from train set as that's what is used for training
S1T1_class_weights = 1172 / torch.LongTensor([132, 129, 494, 417])
"""
 [functional, muscle_tension, normal, organic] = [132, 129, 494, 417]
"""

t1_experiments = [
    HParams(
        results_key="S1/T1/Data2Vec/Simple",
        checkpoint_key="S1/T1/Data2Vec/Simple",
        tensorboard_key="S1/T1/Data2Vec/Simple",
        cache_key="S1/T1/Data2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Data2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=1,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Mfcc/Simple",
        checkpoint_key="S1/T1/Mfcc/Simple",
        tensorboard_key="S1/T1/Mfcc/Simple",
        cache_key="S1/T1/Mfcc",
        stream=1,
        task=1,
        DataLoaderClass=Mfcc,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=1,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/ModifiedCPC/Simple",
        checkpoint_key="S1/T1/ModifiedCPC/Simple",
        tensorboard_key="S1/T1/ModifiedCPC/Simple",
        cache_key="S1/T1/ModifiedCPC",
        stream=1,
        task=1,
        DataLoaderClass=ModifiedCPC,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=1,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/UnispeechSAT/Simple",
        checkpoint_key="S1/T1/UnispeechSAT/Simple",
        tensorboard_key="S1/T1/UnispeechSAT/Simple",
        cache_key="S1/T1/UnispeechSAT",
        stream=1,
        task=1,
        DataLoaderClass=UnispeechSAT,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=1,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Wav2Vec/Simple",
        checkpoint_key="S1/T1/Wav2Vec/Simple",
        tensorboard_key="S1/T1/Wav2Vec/Simple",
        cache_key="S1/T1/Wav2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Wav2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=1,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    #### Batch size = 2
    HParams(
        results_key="S1/T1/Data2Vec/Simple2",
        checkpoint_key="S1/T1/Data2Vec/Simple2",
        tensorboard_key="S1/T1/Data2Vec/Simple2",
        cache_key="S1/T1/Data2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Data2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=2,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Mfcc/Simple2",
        checkpoint_key="S1/T1/Mfcc/Simple2",
        tensorboard_key="S1/T1/Mfcc/Simple2",
        cache_key="S1/T1/Mfcc",
        stream=1,
        task=1,
        DataLoaderClass=Mfcc,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=2,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/ModifiedCPC/Simple2",
        checkpoint_key="S1/T1/ModifiedCPC/Simple2",
        tensorboard_key="S1/T1/ModifiedCPC/Simple2",
        cache_key="S1/T1/ModifiedCPC",
        stream=1,
        task=1,
        DataLoaderClass=ModifiedCPC,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=2,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/UnispeechSAT/Simple2",
        checkpoint_key="S1/T1/UnispeechSAT/Simple2",
        tensorboard_key="S1/T1/UnispeechSAT/Simple2",
        cache_key="S1/T1/UnispeechSAT",
        stream=1,
        task=1,
        DataLoaderClass=UnispeechSAT,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=2,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Wav2Vec/Simple2",
        checkpoint_key="S1/T1/Wav2Vec/Simple2",
        tensorboard_key="S1/T1/Wav2Vec/Simple2",
        cache_key="S1/T1/Wav2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Wav2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=2,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    #### Batch size = 4
    HParams(
        results_key="S1/T1/Data2Vec/Simple4",
        checkpoint_key="S1/T1/Data2Vec/Simple4",
        tensorboard_key="S1/T1/Data2Vec/Simple4",
        cache_key="S1/T1/Data2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Data2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=4,
        device=device,
        loader_type=LoaderTypes.NORMAL,
        best_checkpoint_epoch=92,
    ),
    HParams(
        results_key="S1/T1/Mfcc/Simple4",
        checkpoint_key="S1/T1/Mfcc/Simple4",
        tensorboard_key="S1/T1/Mfcc/Simple4",
        cache_key="S1/T1/Mfcc",
        stream=1,
        task=1,
        DataLoaderClass=Mfcc,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=4,
        device=device,
        loader_type=LoaderTypes.NORMAL,
        best_checkpoint_epoch=189,
    ),
    HParams(
        results_key="S1/T1/MfccWithDeltas/Simple4",
        checkpoint_key="S1/T1/MfccWithDeltas/Simple4",
        tensorboard_key="S1/T1/MfccWithDeltas/Simple4",
        cache_key="S1/T1/MfccWithDeltas",
        stream=1,
        task=1,
        DataLoaderClass=MfccWithDeltas,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=4,
        device=device,
        loader_type=LoaderTypes.NORMAL,
        best_checkpoint_epoch=52,
    ),
    HParams(
        results_key="S1/T1/ModifiedCPC/Simple4",
        checkpoint_key="S1/T1/ModifiedCPC/Simple4",
        tensorboard_key="S1/T1/ModifiedCPC/Simple4",
        cache_key="S1/T1/ModifiedCPC",
        stream=1,
        task=1,
        DataLoaderClass=ModifiedCPC,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=4,
        device=device,
        loader_type=LoaderTypes.NORMAL,
        best_checkpoint_epoch=131,
    ),
    HParams(
        results_key="S1/T1/UnispeechSAT/Simple4",
        checkpoint_key="S1/T1/UnispeechSAT/Simple4",
        tensorboard_key="S1/T1/UnispeechSAT/Simple4",
        cache_key="S1/T1/UnispeechSAT",
        stream=1,
        task=1,
        DataLoaderClass=UnispeechSAT,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=4,
        device=device,
        loader_type=LoaderTypes.NORMAL,
        best_checkpoint_epoch=136,
    ),
    HParams(
        results_key="S1/T1/Wav2Vec/Simple4",
        checkpoint_key="S1/T1/Wav2Vec/Simple4",
        tensorboard_key="S1/T1/Wav2Vec/Simple4",
        cache_key="S1/T1/Wav2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Wav2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=4,
        device=device,
        loader_type=LoaderTypes.NORMAL,
        best_checkpoint_epoch=189,
    ),
    #### Batch size = 8
    HParams(
        results_key="S1/T1/Data2Vec/Simple8",
        checkpoint_key="S1/T1/Data2Vec/Simple8",
        tensorboard_key="S1/T1/Data2Vec/Simple8",
        cache_key="S1/T1/Data2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Data2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=8,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Mfcc/Simple8",
        checkpoint_key="S1/T1/Mfcc/Simple8",
        tensorboard_key="S1/T1/Mfcc/Simple8",
        cache_key="S1/T1/Mfcc",
        stream=1,
        task=1,
        DataLoaderClass=Mfcc,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=8,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/ModifiedCPC/Simple8",
        checkpoint_key="S1/T1/ModifiedCPC/Simple8",
        tensorboard_key="S1/T1/ModifiedCPC/Simple8",
        cache_key="S1/T1/ModifiedCPC",
        stream=1,
        task=1,
        DataLoaderClass=ModifiedCPC,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=8,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/UnispeechSAT/Simple8",
        checkpoint_key="S1/T1/UnispeechSAT/Simple8",
        tensorboard_key="S1/T1/UnispeechSAT/Simple8",
        cache_key="S1/T1/UnispeechSAT",
        stream=1,
        task=1,
        DataLoaderClass=UnispeechSAT,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=8,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Wav2Vec/Simple8",
        checkpoint_key="S1/T1/Wav2Vec/Simple8",
        tensorboard_key="S1/T1/Wav2Vec/Simple8",
        cache_key="S1/T1/Wav2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Wav2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=8,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    #### Batch size = 16
    HParams(
        results_key="S1/T1/Data2Vec/Simple16",
        checkpoint_key="S1/T1/Data2Vec/Simple16",
        tensorboard_key="S1/T1/Data2Vec/Simple16",
        cache_key="S1/T1/Data2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Data2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=16,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Mfcc/Simple16",
        checkpoint_key="S1/T1/Mfcc/Simple16",
        tensorboard_key="S1/T1/Mfcc/Simple16",
        cache_key="S1/T1/Mfcc",
        stream=1,
        task=1,
        DataLoaderClass=Mfcc,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=16,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/ModifiedCPC/Simple16",
        checkpoint_key="S1/T1/ModifiedCPC/Simple16",
        tensorboard_key="S1/T1/ModifiedCPC/Simple16",
        cache_key="S1/T1/ModifiedCPC",
        stream=1,
        task=1,
        DataLoaderClass=ModifiedCPC,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=16,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/UnispeechSAT/Simple16",
        checkpoint_key="S1/T1/UnispeechSAT/Simple16",
        tensorboard_key="S1/T1/UnispeechSAT/Simple16",
        cache_key="S1/T1/UnispeechSAT",
        stream=1,
        task=1,
        DataLoaderClass=UnispeechSAT,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=16,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Wav2Vec/Simple16",
        checkpoint_key="S1/T1/Wav2Vec/Simple16",
        tensorboard_key="S1/T1/Wav2Vec/Simple16",
        cache_key="S1/T1/Wav2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Wav2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=16,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    #### Batch size = 32
    HParams(
        results_key="S1/T1/Data2Vec/Simple32",
        checkpoint_key="S1/T1/Data2Vec/Simple32",
        tensorboard_key="S1/T1/Data2Vec/Simple32",
        cache_key="S1/T1/Data2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Data2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=32,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Mfcc/Simple32",
        checkpoint_key="S1/T1/Mfcc/Simple32",
        tensorboard_key="S1/T1/Mfcc/Simple32",
        cache_key="S1/T1/Mfcc",
        stream=1,
        task=1,
        DataLoaderClass=Mfcc,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=32,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/ModifiedCPC/Simple32",
        checkpoint_key="S1/T1/ModifiedCPC/Simple32",
        tensorboard_key="S1/T1/ModifiedCPC/Simple32",
        cache_key="S1/T1/ModifiedCPC",
        stream=1,
        task=1,
        DataLoaderClass=ModifiedCPC,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=32,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/UnispeechSAT/Simple32",
        checkpoint_key="S1/T1/UnispeechSAT/Simple32",
        tensorboard_key="S1/T1/UnispeechSAT/Simple32",
        cache_key="S1/T1/UnispeechSAT",
        stream=1,
        task=1,
        DataLoaderClass=UnispeechSAT,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=32,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
    HParams(
        results_key="S1/T1/Wav2Vec/Simple32",
        checkpoint_key="S1/T1/Wav2Vec/Simple32",
        tensorboard_key="S1/T1/Wav2Vec/Simple32",
        cache_key="S1/T1/Wav2Vec",
        stream=1,
        task=1,
        DataLoaderClass=Wav2Vec,
        ModelClass=Simple,
        criterion=nn.CrossEntropyLoss(weight=S1T1_class_weights.to(device)),
        OptimClass=Adam,
        lr=1e-5,
        batch_size=32,
        device=device,
        loader_type=LoaderTypes.NORMAL,
    ),
]
